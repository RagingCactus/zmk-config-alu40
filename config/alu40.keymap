/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define LOWER 1
#define RAISE 2
#define CONTROL 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <CONTROL>;
        };
    };
    
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings =
                <&kp>,
                <&kp>;
                
            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        td_lowered_l_alt: td_lowered_l_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "td_lowered_l_alt";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 
                <&kp LALT>,
                <&lowered_l_alt>;
        };

        td_lowered_l_gui: td_lowered_l_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "td_lowered_l_gui";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 
                <&kp LEFT_GUI>,
                <&lowered_l_gui>;
        };
    };
    
    macros {
        lowered_l_alt: lowered_l_alt {
            label = "ZM_lowered_l_alt";
            compatible = "zmk,behavior-macro";
            wait-ms= <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo LOWER &kp LALT>
                , <&macro_pause_for_release>
                , <&macro_release &mo LOWER &kp LALT>
                ;
        };

        lowered_l_gui: lowered_l_gui {
            label = "ZM_lowered_l_gui";
            compatible = "zmk,behavior-macro";
            wait-ms= <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo LOWER &kp LEFT_GUI>
                , <&macro_pause_for_release>
                , <&macro_release &mo LOWER &kp LEFT_GUI>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
  &kp ESC         &kp Q       &kp W              &kp E      &kp R  &kp T      &kp Y      &kp U                      &kp I          &kp O     &kp P   &kp BSPC
  &kp TAB         &kp A       &kp S              &kp D      &kp F  &kp G      &kp H      &kp J                      &kp K          &kp L  &kp SEMI    &kp SQT
&kp LCTRL         &kp Z       &kp X              &kp C      &kp V  &kp B      &kp N      &kp M                  &kp COMMA        &kp DOT  &kp FSLH  &kp RCTRL
&kp LCTRL  &td_lowered_l_gui  &td_lowered_l_alt  &kp LSHFT  &kp SPACE  &mo LOWER  &mo RAISE  &kp RSHFT  &hold_tap RIGHT_ALT ENTER  &kp RIGHT_GUI     &none  &kp RCTRL
            >;
        };

        lower {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3        &kp N4   &kp N5   &kp N6  &kp N7  &kp N8  &kp N9   &kp N0      &kp BSPC
  &kp TAB  &kp F1  &kp F2  &kp F3        &kp F4   &kp F5   &kp F6  &kp N4  &kp N5  &kp N6  &kp DOT  &kp LS(STAR)
   &trans  &kp F7  &kp F8  &kp F9       &kp F10  &kp F11  &kp F12  &kp N1  &kp N2  &kp N3   &kp N0  &kp LS(PLUS)
   &trans  &trans  &trans  &trans  &kp NUMBER_0   &trans   &trans  &trans  &trans  &trans   &trans        &trans
            >;
        };

        raise {
            bindings = <
 &trans           &trans  &kp LS(LEFT_BRACE)  &kp LS(RBRC)   &kp EQUAL  &trans  &kp LS(LEFT_BRACE)  &kp LS(RIGHT_BRACE)      &kp LS(LPAR)       &kp LS(RPAR)        &trans    &kp DEL
&kp DEL  &kp PAUSE_BREAK              &trans     &kp PG_UP    &kp HOME  &trans            &kp LEFT             &kp DOWN            &kp UP          &kp RIGHT  &kp LS(PIPE)  &kp GRAVE
 &trans  &kp PRINTSCREEN              &trans     &kp PG_DN     &kp END  &trans           &kp MINUS            &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET      &kp BSLH     &trans
 &trans           &trans              &trans        &trans  &kp INSERT  &trans              &trans               &trans            &trans             &trans        &trans     &trans
            >;
        };

        control {
            bindings = <
  &sys_reset  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3    &bt BT_SEL 4  &out OUT_TOG           &none  &none       &none       &none  &bt BT_CLR
       &none         &none         &none         &none  &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp C_PLAY_PAUSE  &none       &none       &none       &none
&kp CAPSLOCK         &none         &none         &none             &none           &none       &none             &none  &none       &none       &none       &none
 &bootloader         &none         &none         &none             &none           &none       &none             &none  &none       &none  &bt BT_PRV  &bt BT_NXT
            >;
        };
    };
};
